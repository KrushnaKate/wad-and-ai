import random

def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)
    print("\n")

def check_winner(board, player):
    for i in range(3):
        if all(cell == player for cell in board[i]):  # Row
            return True
        if all(row[i] == player for row in board):  # Column
            return True
    if all(board[i][i] == player for i in range(3)):  # Diagonal
        return True
    if all(board[i][2 - i] == player for i in range(3)):  # Anti-diagonal
        return True
    return False

def is_full(board):
    return all(cell in ['X', 'O'] for row in board for cell in row)

def get_player_move(board):
    while True:
        try:
            move = input("Your move (row and column: 1 1): ")
            row, col = map(int, move.split())
            if row in [1, 2, 3] and col in [1, 2, 3] and board[row - 1][col - 1] == " ":
                return row - 1, col - 1
            else:
                print("Invalid move. Try again.")
        except:
            print("Invalid input format. Use row and column numbers separated by space.")

def get_computer_move(board):
    empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]
    return random.choice(empty_cells)

def tic_tac_toe_vs_computer():
    board = [[" " for _ in range(3)] for _ in range(3)]
    print("Welcome to Tic-Tac-Toe! You are 'X'. Computer is 'O'.")
    print_board(board)

    while True:
        # Player move
        row, col = get_player_move(board)
        board[row][col] = "X"
        print_board(board)
        if check_winner(board, "X"):
            print("Congratulations! You win!")
            break
        if is_full(board):
            print("It's a draw!")
            break

        # Computer move
        print("Computer's turn...")
        row, col = get_computer_move(board)
        board[row][col] = "O"
        print_board(board)
        if check_winner(board, "O"):
            print("Computer wins! Better luck next time.")
            break
        if is_full(board):
            print("It's a draw!")
            break

# Run the game
tic_tac_toe_vs_computer()
